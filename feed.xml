<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://wengzf20.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://wengzf20.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-02-12T10:52:57+00:00</updated><id>https://wengzf20.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">An introduction to compressibleInterFoam</title><link href="https://wengzf20.github.io/blog/2024/compressibleInterFoam/" rel="alternate" type="text/html" title="An introduction to compressibleInterFoam"/><published>2024-01-15T00:00:00+00:00</published><updated>2024-01-15T00:00:00+00:00</updated><id>https://wengzf20.github.io/blog/2024/compressibleInterFoam</id><content type="html" xml:base="https://wengzf20.github.io/blog/2024/compressibleInterFoam/"><![CDATA[<h2> Under development </h2> <p>CompressibleInterFoam is a default multiphase solver in OpenFOAM. It is capable of solving two compressible, non-isothermal immiscible fluids, with/without cavitation. The phase interface is captured using volume of fluid (VoF) approach.</p> <h2> Derivation from conservation law </h2> <p>The mass conservation for individual species are</p> \[\frac{\partial\left(\rho_1 \alpha_1\right)}{\partial t}+\nabla \cdot\left(\rho_1 \boldsymbol{U} \alpha_1\right)=\dot{m}\] \[\frac{\partial\left(\rho_2 \alpha_2\right)}{\partial t}+\nabla \cdot\left(\rho_2 \boldsymbol{U} \alpha_2\right)=-\dot{m}\] <p>where $\alpha_{1}+\alpha_{2} = 1$; $\dot{m}$ is the source term from phase change. If there is no phase change, $\dot{m}$ is zero.</p> <p>Consider only the volume fraction in the l.h.s., and move other parts to the r.h.s. to be the source term.</p> \[\frac{\partial \alpha_1}{\partial t}+\nabla \cdot\left(\boldsymbol{U} \alpha_1\right)=-\frac{\alpha_1}{\rho_1} \frac{D \rho_1}{D t} + \frac{\dot{m}}{\rho_1}\] \[\frac{\partial \alpha_2}{\partial t}+\nabla \cdot\left(\boldsymbol{U} \alpha_2\right)=-\frac{\alpha_2}{\rho_2} \frac{D \rho_2}{D t} - \frac{\dot{m}}{\rho_2}\] <p>The sum of these two equations lead to</p> \[\nabla \cdot\boldsymbol{U}=-\left(\frac{\alpha_1}{\rho_1} \frac{D \rho_1}{D t}+\frac{\alpha_2}{\rho_2} \frac{D \rho_2}{D t}\right)+\dot{m}\left(\frac{1}{\rho_1}-\frac{1}{\rho_2}\right)\] <p>The 1st and 2nd term in the r.h.s. are the compressibility and phase change effects.</p> <p>Insert it to the $\alpha_1$ equation by adding and substracting $\alpha_{1}\nabla \cdot\boldsymbol{U}$</p> \[\frac{\partial \alpha_1}{\partial t}+\nabla \cdot\left(\boldsymbol{U} \alpha_1\right)=\alpha_1 \alpha_2 \left(\frac{1}{\rho_1} \frac{D \rho_1}{D t}-\frac{1}{\rho_2} \frac{D \rho_2}{D t}\right)\] \[+\alpha_1 \nabla \cdot \boldsymbol{U}+\dot{m}\left(\frac{\alpha_2}{\rho_1}+\frac{\alpha_1}{\rho_2}\right)\] <p>The compressibility, $\alpha_1 \nabla \cdot \boldsymbol{U}$ and phase change are source terms for the alpha equation. They are separated into $S_{p}$ and $S_{u}$ in the MULES algorithm. $S_{p}$ is implicit source term, $S_{u}$ is explicit source term.</p> <h2> MULES method </h2> <p>In the $\alpha_{1}$ eqaution, it was defined</p> \[\mathrm{dgdt}=-\alpha_1 \alpha_2 \left(\frac{1}{\rho_1} \frac{D \rho_1}{D t}-\frac{1}{\rho_2} \frac{D \rho_2}{D t}\right)\] <p>dgdt was calculated in the pEqn, i.e.</p> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dgdt</span> <span class="o">=</span>
<span class="p">(</span>
    <span class="n">alpha1</span><span class="o">*</span><span class="p">(</span><span class="n">p_rghEqnComp2</span> <span class="o">&amp;</span> <span class="n">p_rgh</span><span class="p">)</span>
    <span class="o">-</span> <span class="n">alpha2</span><span class="o">*</span><span class="p">(</span><span class="n">p_rghEqnComp1</span> <span class="o">&amp;</span> <span class="n">p_rgh</span><span class="p">)</span>
<span class="p">);</span>
</code></pre></div></div> <p>In solving the $\alpha$ equation, dgdt was calculated according to its sign</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>if (dgdt[celli] &gt; 0.0)
{
    SpRef[celli] -= dgdt[celli]/max(1.0 - alpha1[celli], 1e-4);
    SuRef[celli] += dgdt[celli]/max(1.0 - alpha1[celli], 1e-4);
}
else if (dgdt[celli] &lt; 0.0)
{
    SpRef[celli] += dgdt[celli]/max(alpha1[celli], 1e-4);
}
</code></pre></div></div> <p>The code means, if dgdt &gt; 0 \(S_p = phaseChangeS[1] -\frac{\mathrm{dgdt}}{\alpha_{2}}, S_u = phaseChangeS[0] + \frac{\mathrm{dgdt}}{\alpha_{2}}\) if dgdt &lt; 0 \(S_p = phaseChangeS[1] + \frac{dgdt}{\alpha_{1}}, S_u = phaseChangeS[0]\)</p> <p>$S_p$, $S_u$ together with other terms were sending to</p> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="n">divU</span><span class="p">.</span><span class="n">valid</span><span class="p">())</span>
<span class="p">{</span>
    <span class="n">MULES</span><span class="o">::</span><span class="n">explicitSolve</span>
    <span class="p">(</span>
        <span class="n">geometricOneField</span><span class="p">(),</span> <span class="c1">// 1</span>
        <span class="n">alpha1</span><span class="p">,</span>
        <span class="n">phiCN</span><span class="p">,</span>  <span class="c1">// phi for Euler ddt method, i.e. U</span>
        <span class="n">alphaPhi10</span><span class="p">,</span> <span class="c1">// alpha*U</span>
        <span class="n">Sp</span><span class="p">(),</span>
        <span class="p">(</span><span class="n">Su</span><span class="p">()</span> <span class="o">+</span> <span class="n">divU</span><span class="p">()</span><span class="o">*</span><span class="n">min</span><span class="p">(</span><span class="n">alpha1</span><span class="p">(),</span> <span class="n">scalar</span><span class="p">(</span><span class="mi">1</span><span class="p">)))(),</span>
        <span class="n">oneField</span><span class="p">(),</span>
        <span class="n">zeroField</span><span class="p">()</span>
    <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div> <blockquote> <p>src/twoPhaseModels/twoPhaseMixture/VoF/alphaEqn.H \</p> </blockquote> <p>In MULES::explicitSolve, the time step was calculated, then limiter was applied, last another <em>explicitSolve</em> was called.</p> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">const</span> <span class="n">scalar</span> <span class="n">rDeltaT</span> <span class="o">=</span> <span class="mf">1.0</span><span class="o">/</span><span class="n">mesh</span><span class="p">.</span><span class="n">time</span><span class="p">().</span><span class="n">deltaTValue</span><span class="p">();</span>
<span class="n">limit</span><span class="p">(</span><span class="n">rDeltaT</span><span class="p">,</span> <span class="n">rho</span><span class="p">,</span> <span class="n">psi</span><span class="p">,</span> <span class="n">phi</span><span class="p">,</span> <span class="n">phiPsi</span><span class="p">,</span> <span class="n">Sp</span><span class="p">,</span> <span class="n">Su</span><span class="p">,</span> <span class="n">psiMax</span><span class="p">,</span> <span class="n">psiMin</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>
<span class="n">explicitSolve</span><span class="p">(</span><span class="n">rDeltaT</span><span class="p">,</span> <span class="n">rho</span><span class="p">,</span> <span class="n">psi</span><span class="p">,</span> <span class="n">phiPsi</span><span class="p">,</span> <span class="n">Sp</span><span class="p">,</span> <span class="n">Su</span><span class="p">);</span> 
<span class="c1">// rho - geometricOneField()</span>
<span class="c1">// psi - alpha1</span>
<span class="c1">// phiPsi - alphaPhi10</span>
<span class="c1">// Sp - SpRef</span>
<span class="c1">// Su - SuRef + alpha1*divU()</span>
</code></pre></div></div> <blockquote> <p>src/finiteVolume/fvMatrices/solvers/MULES/MULESTemplates.C</p> </blockquote> <p>The <em>explicitSolve</em> called, new $\alpha_1$ was obtained via</p> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">psiIf</span> <span class="o">=</span>
<span class="p">(</span>
    <span class="n">rho</span><span class="p">.</span><span class="n">oldTime</span><span class="p">().</span><span class="n">field</span><span class="p">()</span><span class="o">*</span><span class="n">psi0</span><span class="o">*</span><span class="n">rDeltaT</span>
    <span class="o">+</span> <span class="n">Su</span><span class="p">.</span><span class="n">field</span><span class="p">()</span>
    <span class="o">-</span> <span class="n">psiIf</span>
<span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">rho</span><span class="p">.</span><span class="n">field</span><span class="p">()</span><span class="o">*</span><span class="n">rDeltaT</span> <span class="o">-</span> <span class="n">Sp</span><span class="p">.</span><span class="n">field</span><span class="p">());</span>
</code></pre></div></div> <blockquote> <p>src/finiteVolume/fvMatrices/solvers/MULES/MULESTemplates.C</p> </blockquote> <p>This means:</p> \[\alpha_1(t+\Delta t)=\frac{\alpha_1(t)/\Delta t + \mathrm{Su.field} - \frac{1}{V_P} \sum_f U\alpha_1 S_{f}}{1/\Delta t-\mathrm{Sp.field} }\] <p><span style="color: red;"><strong>The corresponding equation was</strong></span> \(\frac{\partial \alpha_1}{\partial t}+\nabla \cdot(\boldsymbol{U} \alpha_1)=\alpha_1 S_{p} + S_{u} + \alpha_{1}\nabla\cdot\boldsymbol{U}\) (<strong>Note</strong>: Su.field() = $S_u+\alpha_{1}\nabla\cdot\boldsymbol{U}$)</p> <ul> <li> <p><span style="color: red;"><strong>if dgdt &gt; 0</strong></span> \(\alpha_1 S_{p} + S_{u} = \alpha_{1}phaseChangeS[1] + phaseChangeS[0] + (1-\alpha_{1})\frac{\mathrm{dgdt}}{\alpha_{2}}\) \(= \alpha_{1}phaseChangeS[1] + phaseChangeS[0] + \mathrm{dgdt}\)</p> </li> <li> <p><span style="color: red;"><strong>if dgdt &lt; 0</strong></span> \(\alpha_1 S_{p} + S_{u} = \alpha_{1}phaseChangeS[1] + phaseChangeS[0] + \mathrm{dgdt}\)</p> <p><span style="color: red;"><strong>These two cases indicate</strong></span> \(\alpha_{1}phaseChangeS[1] + phaseChangeS[0] = \dot{m}\left(\frac{\alpha_2}{\rho_1}+\frac{\alpha_1}{\rho_2}\right)\) according to the derivation in the last section. &lt;/span&gt;</p> </li> </ul> <p>(<strong>Note</strong>: $\alpha_1 S_{p}$ + $S_{u}$ is implemented in <em>alphaSuSp.H</em> in the solver)</p> <h2 id="pressure-velocity-coupling">Pressure-velocity coupling</h2> <p>The velocity field is firstly estimated from the momentum equation, then the velocity field is inserted to the Possion equation</p> \[\nabla \cdot (\mathbf{H}_{\boldsymbol{U}} - \frac{1}{a_p} \nabla p_{\mathrm{rgh}})=-\left(\frac{\alpha_1}{\rho_1} \frac{D \rho_1}{D t}+\frac{\alpha_2}{\rho_2} \frac{D \rho_2}{D t}\right)+\dot{m}\left(\frac{1}{\rho_1}-\frac{1}{\rho_2}\right)\] <p>The source code for pressure-possion equation is</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fvScalarMatrix p_rghEqnIncomp
<span class="o">(</span>
    fvc::div<span class="o">(</span>phiHbyA<span class="o">)</span> - fvm::laplacian<span class="o">(</span>rAUf, p_rgh<span class="o">)</span>
    <span class="o">==</span> Sp_rgh
<span class="o">)</span><span class="p">;</span>

solve
<span class="o">(</span>
    p_rghEqnComp1<span class="o">()</span> + p_rghEqnComp2<span class="o">()</span> + p_rghEqnIncomp
<span class="o">)</span><span class="p">;</span>
</code></pre></div></div> <p>where <em>p_rghEqnIncomp</em> means the incompressible part while <em>p_rghEqnComp1</em> and <em>p_rghEqnComp2</em> are compressible parts corresponding to the two phases.</p> <ul> <li>fvc::div(phiHbyA): $\nabla \cdot \mathbf{H}_{\boldsymbol{U}}$</li> <li>fvm::laplacian(rAUf, p_rgh): $\nabla \cdot ( \frac{1}{a_p} \nabla p_{\mathrm{rgh}})$</li> <li>Sp_rgh: source term from phase change, i.e. $\dot{m}\left(\frac{1}{\rho_1}-\frac{1}{\rho_2}\right)$</li> <li>p_rghEqnComp1(): $\frac{\alpha_1}{\rho_1} \frac{D \rho_1}{D t}$</li> <li>p_rghEqnComp2(): $\frac{\alpha_2}{\rho_2} \frac{D \rho_2}{D t}$</li> </ul> <h3 id="consideration-of-the-compressibility">Consideration of the compressibility</h3> <p>By assuming constant temperature, the pressure and density can be related with \(d\rho_{i} = \left(\frac{\partial \rho_{i}}{\partial p}\right)_{T}dp = \psi_{i}dp\text{\quad or\quad}\rho_{i}^* = \rho_{i}^n + \psi_{i}(p^* - p^n)\)<br/> In the pimple loop, the pressure possion equation might be solved for several times in a single time step (for either <em>nOuterCorrectors</em> &gt; 1 or <em>nCorrectors</em> &gt; 1),</p> <ul> <li> <p>first, the pressure effect on density was consider in the equation</p> \[\frac{\alpha_i}{\rho_i} \frac{D \rho_i}{D t} = \frac{\alpha_i}{\rho_i}\left(\frac{\partial \rho}{\partial t} + \boldsymbol{U}\cdot\nabla\rho\right) = \frac{\alpha_i}{\rho_i}\left(\frac{\partial \rho_i^n}{\partial t} + \psi_{i}*correction(\frac{\partial p}{\partial t}) + \boldsymbol{U}\cdot\nabla\rho\right)\] <p>The corresponding code was</p> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">p_rghEqnComp1</span> <span class="o">=</span>
      <span class="p">(</span>
          <span class="p">(</span><span class="n">fvc</span><span class="o">::</span><span class="n">ddt</span><span class="p">(</span><span class="n">alpha1</span><span class="p">,</span> <span class="n">rho1</span><span class="p">)</span> <span class="o">+</span> <span class="n">fvc</span><span class="o">::</span><span class="n">div</span><span class="p">(</span><span class="n">alphaPhi1</span><span class="o">*</span><span class="n">rho1f</span><span class="p">))</span><span class="o">/</span><span class="n">rho1</span>
          <span class="o">-</span> <span class="n">fvc</span><span class="o">::</span><span class="n">ddt</span><span class="p">(</span><span class="n">alpha1</span><span class="p">)</span> <span class="o">-</span> <span class="n">fvc</span><span class="o">::</span><span class="n">div</span><span class="p">(</span><span class="n">alphaPhi1</span><span class="p">)</span>
          <span class="o">+</span> <span class="p">(</span><span class="n">alpha1</span><span class="o">*</span><span class="n">psi1</span><span class="o">/</span><span class="n">rho1</span><span class="p">)</span><span class="o">*</span><span class="n">correction</span><span class="p">(</span><span class="n">fvm</span><span class="o">::</span><span class="n">ddt</span><span class="p">(</span><span class="n">p_rgh</span><span class="p">))</span>
      <span class="p">);</span>
  <span class="n">p_rghEqnComp1</span><span class="p">.</span><span class="n">ref</span><span class="p">()</span> <span class="o">*=</span> <span class="n">pos</span><span class="p">(</span><span class="n">alpha1</span><span class="p">);</span> <span class="c1">//pos(s) - return (s &gt; 0) ? 1: 0;</span>
</code></pre></div> </div> <p>i.e. \(\frac{1}{\rho_1^*}\left(\frac{\partial\left(\alpha_1 \rho_1^*\right)}{\partial t}+\nabla \cdot\left(\alpha_1 \boldsymbol{U} \rho_1^*\right)\right) -\left(\frac{\partial \alpha_1}{\partial t}+\nabla \cdot\left(\boldsymbol{U} \alpha_1\right)\right) + \frac{\alpha_{1}\psi_{1}}{\rho_{1}}*correction(\frac{\partial p}{\partial t})\)</p> <p><strong>Note:</strong> In the solver, p_rgh was used instead of p, this was correction for g = 0. Correction is needed if g might be considerred.</p> </li> <li> <p>second, the density was updated after solving the pressure equation</p> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">mixture</span><span class="p">.</span><span class="n">thermo1</span><span class="p">().</span><span class="n">correctRho</span><span class="p">(</span><span class="n">psi1</span><span class="o">*</span><span class="p">(</span><span class="n">p_rgh</span> <span class="o">-</span> <span class="n">p_rgh_0</span><span class="p">));</span>
  <span class="n">mixture</span><span class="p">.</span><span class="n">thermo2</span><span class="p">().</span><span class="n">correctRho</span><span class="p">(</span><span class="n">psi2</span><span class="o">*</span><span class="p">(</span><span class="n">p_rgh</span> <span class="o">-</span> <span class="n">p_rgh_0</span><span class="p">));</span>
</code></pre></div> </div> </li> </ul> <h2 id="phase-change-model">Phase change model</h2> <p>The phase change model was included in the $\alpha$ equation via</p> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Pair</span><span class="o">&lt;</span><span class="n">tmp</span><span class="o">&lt;</span><span class="n">volScalarField</span><span class="o">::</span><span class="n">Internal</span><span class="o">&gt;&gt;</span> <span class="n">phaseChangeS</span>
<span class="p">(</span>
    <span class="n">phaseChange</span><span class="p">.</span><span class="n">Salpha</span><span class="p">(</span><span class="n">alpha1</span><span class="p">)</span>
<span class="p">);</span>

<span class="k">if</span> <span class="p">(</span><span class="n">phaseChangeS</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">valid</span><span class="p">())</span>
<span class="p">{</span>
    <span class="n">Su</span> <span class="o">=</span> <span class="n">phaseChangeS</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
    <span class="n">Sp</span> <span class="o">=</span> <span class="n">phaseChangeS</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
<span class="p">}</span>
</code></pre></div></div> <p>and pressure equation via</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fvScalarMatrix Sp_rgh<span class="o">(</span>phaseChange.Sp_rgh<span class="o">(</span>rho, gh, p_rgh<span class="o">))</span><span class="p">;</span>
</code></pre></div></div> <h2 id="temperature-equation">Temperature Equation</h2> <p>coming soon</p> ]]></content><author><name></name></author><category term="Solvers"/><category term="OpenFOAM"/><summary type="html"><![CDATA[the connection between source code and governing equations were illustrated.]]></summary></entry><entry><title type="html">An introduction to RSDFoam</title><link href="https://wengzf20.github.io/blog/2023/RSDFoam/" rel="alternate" type="text/html" title="An introduction to RSDFoam"/><published>2023-06-01T00:00:00+00:00</published><updated>2023-06-01T00:00:00+00:00</updated><id>https://wengzf20.github.io/blog/2023/RSDFoam</id><content type="html" xml:base="https://wengzf20.github.io/blog/2023/RSDFoam/"><![CDATA[<p>RSDFoam is a solver for <font color="red">R</font>eal gas <font color="red">S</font>hock and <font color="red">D</font>etonation simulation based on Open<font color="red">FOAM</font>. The present solver was based on <font color="red">the reactive Euler equations</font>. It has considered the nonidealities in the equation of state, thermodynamic functions and mass action law brought about by the interaction between the fluid particles and by their finite volume.</p> <h2 id="implementation">Implementation</h2> <p>RSDFoam was a connection between Cantera and blastFoam. A number of real gas models based on cubic equation of state were implemented by the authors in Cantera 2.4. The solver also utilize the the efficient chemistry solver (CVODE) and flexible input formats in Cantera. BlastFoam offers a number of CFD capabilities including high-order flux evaluation, time integration, etc.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/CanteraDiagram-480.webp 480w,/assets/img/forblogs/RSDFoam/CanteraDiagram-800.webp 800w,/assets/img/forblogs/RSDFoam/CanteraDiagram-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/CanteraDiagram.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Inheritance diagram for implementing real gas models in Cantera. Dashed arrow denotes an instance, indicated onto the dashed line, is created in the class pointed at. </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/RSDFoamDiagram-480.webp 480w,/assets/img/forblogs/RSDFoam/RSDFoamDiagram-800.webp 800w,/assets/img/forblogs/RSDFoam/RSDFoamDiagram-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/RSDFoamDiagram.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Inheritance diagram for classes used in the connection between blastFoam and Cantera. Dashed arrow denotes an instance, indicated onto the dashed line, is created in the class pointed at. </div> <h2 id="validation">Validation</h2> <p>RSDFoam has been thoroughly validated against analytical solutions, previous numerical simulation results and experimental data. The satisfactory agreement demonstrates the accuracy and robustness of the solver for real gas based shock and detonation simulation.</p> <h3 id="shock-tube-problem">shock tube problem</h3> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/Sod_P-480.webp 480w,/assets/img/forblogs/RSDFoam/Sod_P-800.webp 800w,/assets/img/forblogs/RSDFoam/Sod_P-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/Sod_P.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/Sod_rho-480.webp 480w,/assets/img/forblogs/RSDFoam/Sod_rho-800.webp 800w,/assets/img/forblogs/RSDFoam/Sod_rho-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/Sod_rho.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/Sod_T-480.webp 480w,/assets/img/forblogs/RSDFoam/Sod_T-800.webp 800w,/assets/img/forblogs/RSDFoam/Sod_T-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/Sod_T.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Caption photos easily. On the left, a road goes through a tunnel. Middle, leaves artistically fall in a hipster photoshoot. Right, in another hipster photoshoot, a lumberjack grasps a handful of pine needles. </div> <h3 id="oblique-shock">Oblique shock</h3> <div class="row" style="width:45%;"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/ObliquePolar-480.webp 480w,/assets/img/forblogs/RSDFoam/ObliquePolar-800.webp 800w,/assets/img/forblogs/RSDFoam/ObliquePolar-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/ObliquePolar.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h3 id="constant-volume-reactor">Constant volume reactor</h3> <div class="row" style="width:80%;"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/CVIDT-480.webp 480w,/assets/img/forblogs/RSDFoam/CVIDT-800.webp 800w,/assets/img/forblogs/RSDFoam/CVIDT-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/CVIDT.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h3 id="detonation-speed">Detonation speed</h3> <div class="row" style="width:50%;"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/DetSpeed-480.webp 480w,/assets/img/forblogs/RSDFoam/DetSpeed-800.webp 800w,/assets/img/forblogs/RSDFoam/DetSpeed-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/DetSpeed.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h3 id="reaction-zone-structure-of-steady-planar-detonation">Reaction zone structure of steady planar detonation</h3> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/ZND_P-480.webp 480w,/assets/img/forblogs/RSDFoam/ZND_P-800.webp 800w,/assets/img/forblogs/RSDFoam/ZND_P-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/ZND_P.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/ZND_T-480.webp 480w,/assets/img/forblogs/RSDFoam/ZND_T-800.webp 800w,/assets/img/forblogs/RSDFoam/ZND_T-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/ZND_T.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/ZND_massFraction-480.webp 480w,/assets/img/forblogs/RSDFoam/ZND_massFraction-800.webp 800w,/assets/img/forblogs/RSDFoam/ZND_massFraction-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/ZND_massFraction.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h3 id="pulsating-detonation">Pulsating detonation</h3> <div class="row" style="width:80%;"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/pulsatingDet-480.webp 480w,/assets/img/forblogs/RSDFoam/pulsatingDet-800.webp 800w,/assets/img/forblogs/RSDFoam/pulsatingDet-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/pulsatingDet.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h3 id="2d-cellular-detonation">2D Cellular detonation</h3> <div class="row" style="width:100%;"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/forblogs/RSDFoam/CellularStructure-480.webp 480w,/assets/img/forblogs/RSDFoam/CellularStructure-800.webp 800w,/assets/img/forblogs/RSDFoam/CellularStructure-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/forblogs/RSDFoam/CellularStructure.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h2 id="to-use-the-solver">To use the solver</h2> <p>Source codes and demos are available upon reasonable request.</p> <p>Please cite our papers if you use this solver for your research</p> <pre>
@article{WengCAF2023,
  title = {Implementation of an  Solver for Shock and Detonation Simulation at High Pressure},
  author = {Weng, Zifeng and M{\'e}vel, R{\'e}my},
  year = {2023},
  journal = {Computers \&amp; Fluids},
  pages = {106012},
  doi = {10.1016/j.compfluid.2023.106012}
}
</pre> <h2 id="previous-works-using-this-solver">Previous works using this solver</h2> <ol> <li>Zifeng Weng, Rémy Mével. An OpenFOAM Solver for Shock and Detonation Simulation in Real Gas. The 29th ICDERS. At: Siheung, South Korea (2023).</li> <li>Zifeng Weng, Rémy Mével. Implementation of an OpenFOAM solver for shock and detonation simulation at high pressure. Computers &amp; Fluids 265, 106012 (2023).</li> <li>Zifeng Weng, Rémy Mével. Linear and non-linear stability of gaseous detonation at elevated pressure. Accepted by Combustion and Flame.</li> <li>Zifeng Weng, Rémy Mével. Dynamics of detonation cellular structure in linear and nonlinear instability regimes. (under reviewed)</li> </ol>]]></content><author><name></name></author><category term="Solvers"/><category term="OpenFOAM"/><summary type="html"><![CDATA[an in-house solver for real gas shock and detonation simulation]]></summary></entry><entry><title type="html">Prepare figures for journal articles</title><link href="https://wengzf20.github.io/blog/2023/jupyter-notebook/" rel="alternate" type="text/html" title="Prepare figures for journal articles"/><published>2023-05-01T00:00:00+00:00</published><updated>2023-05-01T00:00:00+00:00</updated><id>https://wengzf20.github.io/blog/2023/jupyter-notebook</id><content type="html" xml:base="https://wengzf20.github.io/blog/2023/jupyter-notebook/"><![CDATA[<div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/plotFig.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div>]]></content><author><name></name></author><category term="Code"/><category term="artworks"/><summary type="html"><![CDATA[an summary of codes for preparing figures based on python]]></summary></entry></feed>